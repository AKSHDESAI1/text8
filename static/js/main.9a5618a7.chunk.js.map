{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","useState","btnText","setbtnText","color","backgroundColor","border","myStyle","setmyStyle","style","id","onClick","Navbar","mode","to","title","aboutText","toggleMode","htmlFor","TextForm","text","setText","heading","spellCheck","value","rows","onChange","event","console","log","target","disabled","length","newText","showAlert1","document","getElementById","select","navigator","clipboard","writeText","split","defaultProps","App","setAlert","mode1","setMode","showAlert","message","setTimeout","body","setInterval","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9a5618a7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n                {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [btnText, setbtnText] = useState(\"Enable Dark Mode\");\r\n\r\n  const [myStyle, setmyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n    border: \"2px solid white\",\r\n  });\r\n\r\n  const toggleStyle = () => {\r\n    if (myStyle.color === \"black\") {\r\n      setmyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        border: \"2px solid blue\",\r\n      });\r\n      setbtnText(\"Enable Light Mode\");\r\n    } else {\r\n      setmyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid white\",\r\n      });\r\n      setbtnText(\"Enable Dark Mode\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={myStyle}>\r\n        <h1 className=\"my-2\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={myStyle}\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={myStyle}\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={myStyle}\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <button className=\"btn btn-outline-primary my-2\" onClick={toggleStyle}>\r\n          {btnText}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/text8\">\r\n          {props.title}\r\n        </Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/text8\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/text8/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\"> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                {`${props.mode === 'light' ? 'Enable dark Mode' : 'Enable light Mode'}`}\r\n              </label>\r\n            </div>\r\n            {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">\r\n          Search\r\n        </button> */}\r\n          {/* </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"aksh\",\r\n  aboutText: \"AboutUs\",\r\n};","import React, { useState } from \"react\";\r\n\r\n// console.log(text);\r\n// console.log(setText);\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert1('success', 'converted to Uppercase. ');\r\n    };\r\n\r\n    const handleLoClick = () => {\r\n        console.log(\"LowerCase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert1('success', 'converted to LowerCase. ');\r\n    };\r\n\r\n    const handleClClick = () => {\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert1('danger', 'Text cleared Successfully. ');\r\n    };\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(ev);\r\n        console.log(event.target.value);\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleCopy = () => {\r\n        let myBox = document.getElementById(\"myBox\");\r\n        myBox.select();\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert1('success', 'Text Copied Successfully. ');\r\n    };\r\n\r\n    const [text, setText] = useState(\"\");\r\n    // setText('usfhhf');\r\n    return (\r\n        <>\r\n            <div className=\"container pb-2\">\r\n                <h1 style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }} className=\"my-2\">\r\n                    {props.heading}\r\n                </h1>\r\n                <div\r\n                    className=\"mb-3\"\r\n                    style={{\r\n                        backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n                        color: props.mode === \"light\" ? \"black\" : \"white\",\r\n                    }}\r\n                >\r\n                    <textarea\r\n                        spellCheck=\"true\"\r\n                        className=\"form-control\"\r\n                        value={text}\r\n                        id=\"myBox\"\r\n                        rows=\"8\"\r\n                        onChange={handleOnChange}\r\n                        style={{\r\n                            backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n                            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n                        }}\r\n                    ></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" disabled={text.length === 0} onClick={handleUpClick}>\r\n                    Convert to UpperCase \r\n                </button>\r\n                <button className=\"btn btn-success mx-1 my-1\" disabled={text.length === 0} onClick={handleLoClick}>\r\n                    Convert to LowerCase\r\n                </button>\r\n                <button className=\"btn btn-warning mx-1 \" disabled={text.length === 0} onClick={handleClClick}>\r\n                    Clear Text\r\n                </button>\r\n                <button className=\"btn btn-info mx-1\" disabled={text.length === 0} onClick={handleCopy}>\r\n                    Copy Text\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"container my-2 \"\r\n                style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n            >\r\n                <h2>Your text Summary</h2>\r\n                <p>\r\n                    {text.split(\" \").length} words and {text.length} characters\r\n                </p>\r\n                <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>\r\n                    {text.length > 0\r\n                        ? text\r\n                        : \"Enter something in the textbox above to preview it here\"}\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n\n// let name = \"<b>Harry</b>\";\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [mode1, setMode] = useState(\"light\");\n\n  const showAlert = (type, message) => {\n    setAlert({\n      type: type,\n      msg: message,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode1 = () => {\n    if (mode1 === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#100946\";\n      showAlert(\"success\", \"Dark Mode has been Enabled\");\n      document.title = \"TextUtils - Dark Mode\";\n      setInterval(() => {\n        document.title = \"TextUtils - is Amazing Mode\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtils Now\";\n      }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"primary\", \"Light Mode has been Enabled\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    // <>\n    //   <h1>This is me</h1>\n    //   <div classNameName=\"App\">\n    //     <header classNameName=\"App-header\">\n    //       <img src={logo} classNameName=\"App-logo\" alt=\"logo\" />\n    //       <p>\n    //         Edit <code>src/App.js</code> and save to reload.\n    //       </p>\n    //       <a\n    //         classNameName=\"App-link\"\n    //         href=\"https://reactjs.org\"\n    //         target=\"_blank\"\n    //         rel=\"noopener noreferrer\"\n    //       >\n    //         Learn React With Harry\n    //       </a>\n    //     </header>\n    //   </div>\n    // </>\n    // <>\n    //   <nav>\n    //     <li>Home</li>\n    //     <li>About</li>\n    //     <li>Contact</li>\n    //     <div classNameName=\"container\">\n    //       <h1>Hello {name}</h1>\n    //       <p>\n    //         Lorem, ipsum dolor sit amet consectetur adipisicing elit. Voluptate\n    //         nesciunt cumque corporis magni quibusdam accusantium, magnam\n    //         impedit. Voluptates animi mollitia laudantium id esse! Harum soluta\n    //         sed itaque praesentium, at repellat ipsum minus inventore adipisci.\n    //       </p>\n    //     </div>\n    //   </nav>\n    // </>\n\n      <Router>\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode1} toggleMode={toggleMode1} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Switch> */}\n          <Routes>\n          <Route path=\"/text8/about\" element={<About />}></Route>\n\n          <Route\n            path=\"/text8\"\n            element={\n              <TextForm\n                heading=\"Enter the text to analyze Below\"\n                mode={mode1}\n                showAlert1={showAlert}\n              />\n            }\n          ></Route>\n\n          {/* </Switch> */}\n\n          {/* <TextForm\n          heading=\"Enter the text to analyze Below\"\n          mode={mode1}\n          showAlert1={showAlert}\n        /> */}\n          {/* <About /> */}\n          {/* <About /> */}\n\n      </Routes>\n        </div>\n\n    </>\n       </Router> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}